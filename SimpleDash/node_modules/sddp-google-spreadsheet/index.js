module.exports = {
	dataprovider: function() {
		return new SimpleDashGoogleSpreadsheet();
	}
};

/**
 * Load data from Google Spreadsheet.
 */
function SimpleDashGoogleSpreadsheet() {
    var ckey = "google-spreadsheet";
    
    this.fetchData = function (id, config, sender, callback) {
        this.open(id, config);
        this.series(id, config, sender, callback);        
    }
    
    this.connections = [];
    this.open = function (chartId, config) {
        if (!this.connections[chartId]) {
            var gs = require(ckey);
            var conn = new gs(config[ckey]["key"]);
            conn.setAuth(config[ckey]["email"], config[ckey]["password"], function (err) {console.log(err);});
            this.connections[chartId] = conn;
        }
    };
    
    this.series = function (chartId, config, sender, callback) {
        if (config[ckey]["series"]) {
            for (var seriesName in config[ckey]["series"]) {
                function updateSeriesGenerator(series, nameLabel, yLabel, yType, sender, callback) {
                    return function (err, rows) {
                        if (err) {
                            console.log(err);
                        } else {
                            var result = require("sd-core").chart();
                        
                            var cats = [];
                            var chart = $("#chart" + chartId).highcharts();
                            var s = result.get(series);
                            var yValue;
                            for (var i = 0; i < rows.length; i++) {
                                yValue = rows[i][yLabel];
                                if (yType == "float") {
                                    yValue = parseFloat(yValue);
                                }
                                result.push({ name: rows[i][nameLabel], y: yValue});
                                cats.push(rows[i][nameLabel]);
                            }
                            result.setCategories(cats);
                            callback.apply(sender, [result]);
                        }
                    }
                };
                var cfg = config[ckey]["series"][seriesName];
            
                this.connections[chartId].getRows(
                    cfg["sheet"],
                    {},
                    "",
                    updateSeriesGenerator(seriesName, cfg["name"], cfg["y"], cfg["yType"], sender, callback)
                );
            }
        }
    };
}
