module.exports = {
    dataprovider: function () {
        return new SimpleDashSQLite3();
    }
};

/**
 * SQLite3 Data provider using node-sqlite3 implementation.
 */
function SimpleDashSQLite3 () {
    this.connections = [];
    this.sql = null;
    
    this.fetchData = function (id, config, sender, callback) {
        this.open(id, config);
        this.series(id, config, sender, callback);
    }
    
    this.open = function (chartId, config) {
        if (this.sql == null) {
            this.sql = require("sqlite3");
        }
        if (this.connections[chartId] == null) {
            this.connections[chartId] = new this.sql.Database(config["sqlite3"]["database"]);
        }
    }
    
    this.series = function (chartId, config, sender, callback) {
        if (config["sqlite3"]["series"]) {
            for (var seriesName in config["sqlite3"]["series"]) {
                function updateSeriesGenerator(seriesName, sender, callback) {
                    return function (err, rows) {
                        if (err) {
                            console.log(err);
                        } else {
                            var result = require("sd-core").chart();
                            var series = result.add(seriesName);
                            var cats = [];
                            for (var i = 0; i < rows.length; i++) {
                                
                                series.push({ name: rows[i]["category"], y: rows[i]["y"]});
                                cats.push(rows[i]["category"]);
                            }
                            
                            result.setCategories(cats);
                            callback.apply(sender, [result]);
                        }
                    }
                };
            
                this.connections[chartId].all(config["sqlite3"]["series"][seriesName]["sql"], updateSeriesGenerator(seriesName, sender, callback));
            }
        }
    }
}
